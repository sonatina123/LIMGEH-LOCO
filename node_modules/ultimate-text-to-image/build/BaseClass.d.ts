/// <reference types="node" />
import { Canvas, JpegConfig, JPEGStream, PngConfig, PNGStream } from "canvas";
import { IBaseOptions } from "./types";
export declare class BaseClass {
    options: Partial<IBaseOptions>;
    protected _canvas?: Canvas;
    private _renderedTime;
    private _before;
    get hasRendered(): boolean;
    get canvas(): Canvas;
    get renderedTime(): number;
    get width(): number;
    get height(): number;
    render(): this;
    toDataUrl(mineType?: "image/png"): string;
    toDataUrl(mineType: "image/jpeg", options?: {
        quality?: number;
    }): string;
    toBuffer(mineType?: "image/png", options?: PngConfig): Buffer;
    toBuffer(mineType: "image/jpeg", options?: JpegConfig): Buffer;
    toFile(filename: string, mineType?: "image/png", options?: PngConfig): void;
    toFile(filename: string, mineType: "image/jpeg", options?: JpegConfig): void;
    toStream(mineType?: "image/png", options?: PngConfig): PNGStream;
    toStream(mineType: "image/jpeg", options?: JpegConfig): JPEGStream;
    protected _checkHasRendered(): void;
    protected _startTimer(): void;
    protected _endTimer(): void;
}
